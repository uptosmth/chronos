/*
 * This file is generated by jOOQ.
 */
package com.uptosmth.chronos.db.tables.records;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import com.uptosmth.chronos.db.tables.Heartbeat;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class HeartbeatRecord extends UpdatableRecordImpl<HeartbeatRecord>
        implements Record8<
                Integer,
                String,
                LocalDateTime,
                LocalDateTime,
                LocalDateTime,
                LocalDateTime,
                String,
                String> {

    private static final long serialVersionUID = 1L;

    /** Setter for <code>heartbeat.id</code>. */
    public void setId(Integer value) {
        set(0, value);
    }

    /** Getter for <code>heartbeat.id</code>. */
    public Integer getId() {
        return (Integer) get(0);
    }

    /** Setter for <code>heartbeat.uuid</code>. */
    public void setUuid(String value) {
        set(1, value);
    }

    /** Getter for <code>heartbeat.uuid</code>. */
    public String getUuid() {
        return (String) get(1);
    }

    /** Setter for <code>heartbeat.delivered_at</code>. */
    public void setDeliveredAt(LocalDateTime value) {
        set(2, value);
    }

    /** Getter for <code>heartbeat.delivered_at</code>. */
    public LocalDateTime getDeliveredAt() {
        return (LocalDateTime) get(2);
    }

    /** Setter for <code>heartbeat.processed_at</code>. */
    public void setProcessedAt(LocalDateTime value) {
        set(3, value);
    }

    /** Getter for <code>heartbeat.processed_at</code>. */
    public LocalDateTime getProcessedAt() {
        return (LocalDateTime) get(3);
    }

    /** Setter for <code>heartbeat.created_at</code>. */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /** Getter for <code>heartbeat.created_at</code>. */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /** Setter for <code>heartbeat.local_created_at</code>. */
    public void setLocalCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /** Getter for <code>heartbeat.local_created_at</code>. */
    public LocalDateTime getLocalCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /** Setter for <code>heartbeat.type</code>. */
    public void setType(String value) {
        set(6, value);
    }

    /** Getter for <code>heartbeat.type</code>. */
    public String getType() {
        return (String) get(6);
    }

    /** Setter for <code>heartbeat.data</code>. */
    public void setData(String value) {
        set(7, value);
    }

    /** Getter for <code>heartbeat.data</code>. */
    public String getData() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<
                    Integer,
                    String,
                    LocalDateTime,
                    LocalDateTime,
                    LocalDateTime,
                    LocalDateTime,
                    String,
                    String>
            fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<
                    Integer,
                    String,
                    LocalDateTime,
                    LocalDateTime,
                    LocalDateTime,
                    LocalDateTime,
                    String,
                    String>
            valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Heartbeat.HEARTBEAT.ID;
    }

    @Override
    public Field<String> field2() {
        return Heartbeat.HEARTBEAT.UUID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Heartbeat.HEARTBEAT.DELIVERED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Heartbeat.HEARTBEAT.PROCESSED_AT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Heartbeat.HEARTBEAT.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Heartbeat.HEARTBEAT.LOCAL_CREATED_AT;
    }

    @Override
    public Field<String> field7() {
        return Heartbeat.HEARTBEAT.TYPE;
    }

    @Override
    public Field<String> field8() {
        return Heartbeat.HEARTBEAT.DATA;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUuid();
    }

    @Override
    public LocalDateTime component3() {
        return getDeliveredAt();
    }

    @Override
    public LocalDateTime component4() {
        return getProcessedAt();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getLocalCreatedAt();
    }

    @Override
    public String component7() {
        return getType();
    }

    @Override
    public String component8() {
        return getData();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUuid();
    }

    @Override
    public LocalDateTime value3() {
        return getDeliveredAt();
    }

    @Override
    public LocalDateTime value4() {
        return getProcessedAt();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getLocalCreatedAt();
    }

    @Override
    public String value7() {
        return getType();
    }

    @Override
    public String value8() {
        return getData();
    }

    @Override
    public HeartbeatRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public HeartbeatRecord value2(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public HeartbeatRecord value3(LocalDateTime value) {
        setDeliveredAt(value);
        return this;
    }

    @Override
    public HeartbeatRecord value4(LocalDateTime value) {
        setProcessedAt(value);
        return this;
    }

    @Override
    public HeartbeatRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public HeartbeatRecord value6(LocalDateTime value) {
        setLocalCreatedAt(value);
        return this;
    }

    @Override
    public HeartbeatRecord value7(String value) {
        setType(value);
        return this;
    }

    @Override
    public HeartbeatRecord value8(String value) {
        setData(value);
        return this;
    }

    @Override
    public HeartbeatRecord values(
            Integer value1,
            String value2,
            LocalDateTime value3,
            LocalDateTime value4,
            LocalDateTime value5,
            LocalDateTime value6,
            String value7,
            String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /** Create a detached HeartbeatRecord */
    public HeartbeatRecord() {
        super(Heartbeat.HEARTBEAT);
    }

    /** Create a detached, initialised HeartbeatRecord */
    public HeartbeatRecord(
            Integer id,
            String uuid,
            LocalDateTime deliveredAt,
            LocalDateTime processedAt,
            LocalDateTime createdAt,
            LocalDateTime localCreatedAt,
            String type,
            String data) {
        super(Heartbeat.HEARTBEAT);

        setId(id);
        setUuid(uuid);
        setDeliveredAt(deliveredAt);
        setProcessedAt(processedAt);
        setCreatedAt(createdAt);
        setLocalCreatedAt(localCreatedAt);
        setType(type);
        setData(data);
    }
}
