<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2021 Viacheslav Tykhanovskyi
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.uptosmth.chronos</groupId>
  <artifactId>chronos</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>chronos</name>
  <description>Chronos</description>
  <url>http://uptosmth.com</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <h2.version>1.4.200</h2.version>
    <jackson.version>2.13.1</jackson.version>
    <log4j.version>2.17.0</log4j.version>
    <junit.jupiter.version>5.8.2</junit.jupiter.version>
    <jooq.version>3.14.11</jooq.version>
    <sqlite.version>3.36.0.3</sqlite.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>4.1.72.Final</version>
    </dependency>
  <dependency>
    <groupId>com.linecorp.armeria</groupId>
    <artifactId>armeria</artifactId>
    <version>1.13.4</version>
  </dependency>
    <dependency>
      <groupId>com.diogonunes</groupId>
      <artifactId>JColor</artifactId>
      <version>5.2.0</version>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>4.6.2</version>
    </dependency>
    <dependency>
      <groupId>org.javatuples</groupId>
      <artifactId>javatuples</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>${sqlite.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>${jooq.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta</artifactId>
      <version>${jooq.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta-extensions</artifactId>
      <version>${jooq.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
      <version>${jooq.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>4.6.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jcl</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jul</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>
      <dependency>
          <groupId>io.rest-assured</groupId>
          <artifactId>rest-assured</artifactId>
          <version>4.4.0</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>com.networknt</groupId>
          <artifactId>json-schema-validator</artifactId>
          <version>1.0.63</version>
      </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>jooq</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>
            <version>${jooq.version}</version>
            <executions>
              <execution>
                <id>jooq-codegen</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <jdbc>
                    <driver>org.sqlite.JDBC</driver>
                    <url>jdbc:sqlite:${jooqDatabase}</url>
                  </jdbc>
                  <generator>
                    <generate>
                      <records>true</records>
                    </generate>
                    <target>
                      <packageName>com.uptosmth.chronos.db</packageName>
                      <directory>src/main/java/</directory>
                    </target>
                  </generator>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>linux</family>
        </os>
      </activation>
      <properties>
        <os_name>linux</os_name>
        <lib_name>libx11windowmanager.so</lib_name>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.22.2</version>
            <configuration>
              <argLine>-Djava.library.path=${project.build.directory} -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager</argLine>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>1.0-alpha-11</version>
            <extensions>true</extensions>
            <configuration>
              <javahOS>${os_name}</javahOS>
              <sources>
                <source>
                  <directory>src/native</directory>
                  <fileNames>
                    <fileName>x11windowmanager.c</fileName>
                    <fileName>com_uptosmth_chronos_infra_X11WindowManager.c</fileName>
                  </fileNames>
                </source>
              </sources>
              <compilerProvider>generic-classic</compilerProvider>
              <compilerExecutable>gcc</compilerExecutable>
              <compilerStartOptions>
                <compilerStartOption>-fPIC</compilerStartOption>
                <compilerStartOption>-Wall</compilerStartOption>
                <compilerStartOption>-Wextra</compilerStartOption>
                <compilerStartOption>-O3</compilerStartOption>
                <compilerStartOption>-I</compilerStartOption>
                <compilerStartOption>${env.JAVA_HOME}/include</compilerStartOption>
                <compilerStartOption>-I</compilerStartOption>
                <compilerStartOption>${env.JAVA_HOME}/include/linux</compilerStartOption>
              </compilerStartOptions>
              <linkerOutputDirectory>target</linkerOutputDirectory>
              <linkerExecutable>gcc</linkerExecutable>
              <linkerStartOptions>
                <linkerStartOption>-fPIC</linkerStartOption>
                <linkerStartOption>-shared</linkerStartOption>
              </linkerStartOptions>
              <linkerEndOptions>
                <linkerEndOption>-lXss</linkerEndOption>
                <linkerEndOption>-lX11</linkerEndOption>
                <linkerEndOption>-o ${project.build.directory}/${lib_name}</linkerEndOption>
              </linkerEndOptions>
            </configuration>
            <executions>
              <execution>
                <id>javah</id>
                <phase>compile</phase>
                <goals>
                  <goal>initialize</goal>
                  <goal>compile</goal>
                  <goal>link</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.13.1</version>
        <configuration>
          <formats>
          </formats>
          <java>
            <googleJavaFormat>
              <version>1.7</version>
              <style>AOSP</style>
            </googleJavaFormat>
            <importOrder>
              <order>java,javax,org,com,com.uptosmth</order>
            </importOrder>
            <removeUnusedImports/>
          </java>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.5.0</version>
        <executions>
          <execution>
            <id>generate-jni-headers</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${project.basedir}</workingDirectory>
              <executable>javah</executable>
              <arguments>
                <argument>-verbose</argument>
                <argument>-jni</argument>
                <argument>-classpath</argument>
                <argument>${project.build.sourceDirectory}</argument>
                <argument>-d</argument>
                <argument>${project.basedir}/src/native</argument>
                <argument>com.uptosmth.chronos.infra.X11WindowManager</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.uptosmth.chronos.App</mainClass>
                  <manifestEntries>
                    <Multi-Release>true</Multi-Release>
                  </manifestEntries>
                </transformer>
              </transformers>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
                <source>1.8</source>
                <target>1.8</target>
            </configuration>
        </plugin>
    </plugins>
  </build>
</project>
